[architecture] оптимальный путь перехода от монолита к микросервисам?
[java] что можно предложить вместо констуктора с большим количеством параметров?
[pattern] как инициализировать классы в зависимости от типа?
[architecture] [java] подготовка удобного writer для разработчика?
[java] interfaces vs abstract classes?

[java] константы в интерфейсах?
The constant interface pattern is a poor use of interfaces. That a class uses some constants internally is an implementation detail. Implementing a constant interface causes this implementation detail to leak into the class's exported API. It is of no consequence to the users of a class that the class implements a constant interface. In fact, it may even confuse them. Worse, it represents a commitment: if in a future release the class is modified so that it no longer needs to use the constants, it still must implement the interface to ensure binary compatibility. If a nonfinal class implements a constant interface, all of its subclasses will have their namespaces polluted by the constants in the interface.
There are several constant interfaces in the java platform libraries, such as java.io.ObjectStreamConstants. These interfaces should be regarded as anomalies and should not be emulated.
https://stackoverflow.com/questions/2659593/what-is-the-use-of-interface-constants

[java] collection interfaces?
[java] чем отличается set vs map?
[java] контракт equals/hashcode?
[java] если объекты равны, hash должен быть равен?
[java] сложность удаления из связного списка последнего элемента?
[java] вложенные классы?
[java] как сделать builder?
[pattern] pattern observer?
[java] [concurrency] синхронизированный доступ?
[java] [concurrency] что делает synchronized?
[database] возможные проблемы индексов?
[database] запрос медленно работает, что делает?
[database] tools для нахождения проблем с запросами?
[database] explain tools для анализа запросов?
[architecture] тесты?
[architecture] [microservices] виды коммуникаций в микросервисах?
[architecture] [microservices] асинхронный vs синхронный вид коммуникации?
идеальный путь от задачи до продакшина?
tools/analyzing for code?
third-party service медленно работает?
требования к deployment of microservice (high availability)?
