расскажи про последний проект

[transaction] транзакционность в микросервисах
Options:
1. Distributed transaction
A distributed transaction is a very complex process with a lot of moving parts that can fail. Also, if these parts run on different machines or even in different data centers, the process of committing a transaction could become very long and unreliable.
2. Two-Phase Commit Protocol
The problem with 2PC is that it is quite slow compared to the time for operation of a single microservice.
Coordinating the transaction between microservices, even if they are on the same network, can really slow the system down.
3. Eventual Consistency and Compensation
By far, one of the most feasible models of handling consistency across microservices is eventual consistency.
One way to solve it would be with a message-driven approach including compensation.
The messaging platform could ensure that the messages sent by the microservices are persisted. Then they would be delivered at a later time if the receiver weren’t currently available
https://www.baeldung.com/transactions-across-microservices
https://habr.com/ru/company/nixsolutions/blog/321686/
https://habr.com/ru/company/nixsolutions/blog/322214/

кроме транзакций, в микросервисах какие еще могут быть проблемы?
1. As if monitoring a monolith wasn’t hard enough
2. Logging is distributed between services
3. An issue that’s caused by one service, can cause trouble elsewhere
4. Finding the root cause of problems
5. Version management and cyclic dependencies between services
https://blog.overops.com/5-ways-to-not-f-up-your-microservices-in-production/

как решается проблема с коммуникацией, когда какой-либо сервис не доступен?
1. The circuit breaker pattern is the solution to this problem. The basic idea behind the circuit breaker is very simple. You wrap a protected function call in a circuit breaker object, which monitors for failures. Once the failures reach a certain threshold, the circuit breaker trips, and all further calls to the circuit breaker return with an error or with some alternative service or default message, without the protected call being made at all. This will make sure system is responsive and threads are not waiting for an unresponsive call.
2. Retry Logic
https://blog.risingstack.com/designing-microservices-architecture-for-failure/
https://dzone.com/articles/circuit-breaker-pattern

а если rabbitMQ отвалится?
https://dzone.com/articles/rabbitmq-in-microservices

в качестве rest-клиента что используется?
какую java используете?
какие нововведения в java 8, 9, 10, 11?

в чем концептуальное отличие stream api от collection?
https://stackoverflow.com/questions/39432699/what-is-the-difference-between-streams-and-collections-in-java-8

реализовать stream api (с функциями filter, map), lambda можно использовать

что такое volatile?
https://www.baeldung.com/java-volatile

как мы создаем копии объектов вне volatile?
где хранится ссылка на объект?
типы памяти в Java?
кроме heap что еще есть?
как вызываются методы? как передаются параметры?
куда передаются параметры? как это делается?
что такое java agent?
был опыт troubleshooting?
пользовались profiler?
что такое stop the world?

чем отличается int, Integer, AtomicInteger?
https://stackoverflow.com/questions/8660691/what-is-the-difference-between-integer-and-int-in-java
https://stackoverflow.com/questions/38846976/what-is-the-difference-between-atomic-integer-and-normal-immutable-integer-class

i++ для Integer, что будет с памятью?
https://stackoverflow.com/questions/13280134/why-does-post-increment-work-on-wrapper-classes

что такое servlet api?

в чем разница между параметрами и аттрибутами?
https://stackoverflow.com/questions/5243754/difference-between-getattribute-and-getparameter

жизненный цикл сервлета?
https://www.geeksforgeeks.org/life-cycle-of-a-servlet/

а можно ли какой-то сервлет быстрее создать, чем другие?
что такое servlet mapping?
с бд работали?
что такое having в sql?

[transaction] что такое транзакция?
https://github.com/enhorse/java-interview/blob/master/db.md#%D0%A7%D1%82%D0%BE-%D1%82%D0%B0%D0%BA%D0%BE%D0%B5-%D1%82%D1%80%D0%B0%D0%BD%D0%B7%D0%B0%D0%BA%D1%86%D0%B8%D1%8F
https://proselyte.net/tutorials/sql/sql-transactions/

[transaction] что должно выполняться? для чего нужны?
https://github.com/enhorse/java-interview/blob/master/db.md#%D0%BD%D0%B0%D0%B7%D0%BE%D0%B2%D0%B8%D1%82%D0%B5-%D0%BE%D1%81%D0%BD%D0%BE%D0%B2%D0%BD%D1%8B%D0%B5-%D1%81%D0%B2%D0%BE%D0%B9%D1%81%D1%82%D0%B2%D0%B0-%D1%82%D1%80%D0%B0%D0%BD%D0%B7%D0%B0%D0%BA%D1%86%D0%B8%D0%B8

[transaction] как бд обеспечивает согласованность данных?


[transaction] optimistic/pessimistic locking в чем разница?
https://stackoverflow.com/questions/129329/optimistic-vs-pessimistic-locking

[transaction] Eventual consistency что такое?
http://citforum.ru/database/articles/kuz_oltp_2010/2.shtml

c nosql был опыт?
как конфигурили спринг? (xml, java configs)
что такое lookup method?

[transaction] использовали declarative transaction в спринге?
https://stackoverflow.com/questions/11222103/declarative-or-programmatic-transaction-in-spring

в спринге что создает прокси?
в чем разница beanFactory/factoryBean?
@LoggableAutowired - своя аннотация, как это сделать?
spring boot использовали?
в чем отличие от спринга?
как добавить свои конфигурации?

где описание конфигураций в meta-inf?
https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-developing-auto-configuration.html

есть опыт в spring cloud?

attached/detached entity что это значит?
https://stackoverflow.com/questions/2573739/what-are-detached-persistent-and-transient-objects-in-hibernate

а зачем нужен flush?
https://stackoverflow.com/questions/3220336/whats-the-use-of-session-flush-in-hibernate

в spring attached/dettached как называются?
уровни кэша в hibernate?
где находится кэш первого уровня?
как конкретно использовали solr?
как http протокол работает?
а body в http?

области видимости в js есть?
https://getinstance.info/articles/javascript/variables-scope-in-javascript/

зачем нужен bind? а есть call & apply?
https://medium.com/@jhawleypeters/javascript-call-vs-apply-vs-bind-61447bc5e989

потеря контекста в js?
с docker работали?
по tcp/ip знаете что-нибудь?
есть большущий список, нужно сделать поиск по какому-то полю
бд выполняют эту задачу
что больше понравился react или angular?
какие life-cycle методы есть у компонента?
чем отличается state от props?
как меняется state в компоненте?
pipelines / kubernetes?